using System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Microsoft.EntityFrameworkCore;\nusing MyApp.Domain.Entities;\nusing MyApp.Domain.Interfaces;\nusing MyApp.Infrastructure.Data;\n\nnamespace MyApp.Infrastructure.Repositories\n{\n    public class SupplierRepository : ISupplierRepository\n    {\n        private readonly ApplicationDbContext _context;\n\n        public SupplierRepository(ApplicationDbContext context)\n        {\n            _context = context;\n        }\n\n        public async Task AddAsync(Supplier supplier)\n        {\n            _context.Suppliers.Add(supplier);\n            await _context.SaveChangesAsync();\n        }\n\n        public async Task UpdateAsync(Supplier supplier)\n        {\n            _context.Suppliers.Update(supplier);\n            await _context.SaveChangesAsync();\n        }\n\n        public async Task<Supplier> GetByIdAsync(Guid id)\n        {\n            return await _context.Suppliers.AsNoTracking()\n                                           .FirstOrDefaultAsync(x => x.Id == id);\n        }\n\n        public async Task<IEnumerable<Supplier>> GetAllAsync()\n        {\n            return await _context.Suppliers.AsNoTracking().ToListAsync();\n        }\n    }\n}\n