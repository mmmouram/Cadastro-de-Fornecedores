using System;\nusing System.Net;\nusing System.Text.Json;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Http;\nusing MyApp.Backend.Exceptions;\n\nnamespace MyApp.Backend.Middlewares\n{\n    public class ExceptionHandlingMiddleware\n    {\n        private readonly RequestDelegate _next;\n        public ExceptionHandlingMiddleware(RequestDelegate next)\n        {\n            _next = next;\n        }\n\n        public async Task InvokeAsync(HttpContext context)\n        {\n            try\n            {\n                await _next(context);\n            }\n            catch (BadRequestException ex)\n            {\n                context.Response.StatusCode = (int)HttpStatusCode.BadRequest;\n                context.Response.ContentType = \"application/json\";\n                var response = new { message = ex.Message };\n                await context.Response.WriteAsync(JsonSerializer.Serialize(response));\n            }\n            catch (Exception)\n            {\n                context.Response.StatusCode = (int)HttpStatusCode.InternalServerError;\n                context.Response.ContentType = \"application/json\";\n                var response = new { message = \"Ocorreu um erro interno.\" };\n                await context.Response.WriteAsync(JsonSerializer.Serialize(response));\n            }\n        }\n    }\n}